@using SCA.Common;
@model SCA.Entity.DTO.ContentDetailForDetailPageDTO

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .entry-content {
        font-size: 16px;
        padding-top: 20px;
    }

        .entry-content img {
            width: 100% !important;
            height: 100% !important;
            margin-top: 10px !important;
            margin-bottom: 10px !important;
            border-radius: 5px;
            box-shadow: 0px 0px 5px 0px;
        }

    .heart-box i {
        width: 35px;
        height: 35px;
        -webkit-border-radius: 50%;
        text-align: center;
        vertical-align: sub;
        font-size: 28px !important;
        line-height: 28px !important;
        cursor: pointer;
    }

    .author-box {
        margin-bottom: 0 !important;
        border-bottom: unset !important;
        border-top: unset !important;
        padding: 50px 0 20px 100px !important;
    }

    .heart-box {
        color: unset !important;
    }

        .heart-box a:hover, .heart-box a.active {
            color: #e31b23 !important;
        }
</style>

<!-- single post start -->
<section class="single-post-wrapper post-layout-1">
    <div class="container">
        @*<div class="row">
                <div class="col-lg-12">
                    <div class="single-big-img mb-30" style="background-image: url(@Model.ImagePath)"></div>
                </div>
            </div>*@
        <div class="row">
            <div class="col-lg-9">
                @*<div class="single-big-img mb-30" style="background-image: url(@Model.ImagePath)"></div>*@
                <div class="ts-grid-box content-wrapper single-post">
                    <div class="entry-header">
                        <div class="category-name-list">
                            <span>
                                @if (!string.IsNullOrEmpty(Model.Category))
                                {
                                    foreach (var x in Model.Category.Split(","))
                                    {
                                        <a href="@Url.Action(" Index", "Category")" class="post-cat ts-green-bg">@x</a>
                                    }
                                }
                            </span>
                        </div>
                        <h2 class="post-title lg">@Model.Header</h2>
                        <ul class="post-meta-info">
                            <li class="author">
                                <a href="#">
                                    <img src="@(Model.WriterImagePath ?? ((Model.GenderId == SCA.Entity.Enums.GenderType.Man) ? "/images/avatar/man.png" : "/images/avatar/woman.png"))" alt=""> @Model.Writer
                                </a>
                            </li>
                            <li>
                                <a href="">
                                    <i class="fa fa-clock-o"></i>
                                    @Model.PublishDate.ToString("dd MMMM yyyy")
                                </a>
                            </li>
                            <li>
                                <a href="#commentArea">
                                    <i class="fa fa-comments"></i>
                                    @Model.CommentList?.Count
                                </a>
                            </li>
                            <li class="active">
                                <i class="fa fa-eye"></i>
                                @Model.ReadCount
                            </li>
                            @*<li class="share-post">
                                    <a href="#">
                                        <i class="fa fa-share"></i>
                                    </a>
                                </li>*@

                            <li class="heart-box">
                                @if (Context.GetSessionData<SCA.Entity.DTO.UserSession>
                                ("userInfo")?.Id > 0)
                                {
                                    <a id="addFavorite" data-id="@Model.Id" class="@(Model.IsFavoriteContent ? "active" : "" )">
                                        <i class="fa fa-heart"></i>
                                    </a>
                                }
                                else
                                {
                                    <a class="openLoginMagnific">
                                        <i class="fa fa-heart"></i>
                                    </a>
                                }
                            </li>

                        </ul>
                    </div>
                    <!-- single post header end-->
                    <div class="post-content-area">
                        <div class="post-media post-featured-image">
                            <a href="@Model.ImagePath" class="gallery-popup">
                                <img src="@Model.ImagePath" class="img-fluid" alt="">
                            </a>
                        </div>
                        <div class="entry-content">
                            @Html.Raw(Model.ContentDescription)
                        </div>
                        <!-- entry content end-->
                    </div>
                    <!-- post content area-->
                    <div class="author-box">
                        <img class="author-img" src="@(Model.WriterImagePath ?? ((Model.GenderId == SCA.Entity.Enums.GenderType.Man) ? "/images/avatar/man.png" : "/images/avatar/woman.png"))" alt="">
                        <div class="author-info">
                            <h4 class="author-name">@Model.Writer</h4>
                            <div class="authors-social">
                                <a href="#" class="ts-twitter">
                                    <i class="fa fa-twitter"></i>
                                </a>
                                <a href="#" class="ts-facebook">
                                    <i class="fa fa-facebook"></i>
                                </a>
                                <a href="#" class="ts-google-plus">
                                    <i class="fa fa-google-plus"></i>
                                </a>
                                <a href="#" class="ts-linkedin">
                                    <i class="fa fa-linkedin"></i>
                                </a>
                            </div>
                            <div class="clearfix"></div>
                            <p>
                                @Model.WriterBiography
                            </p>

                        </div>
                    </div>
                    @await Component.InvokeAsync("UserPopularItems", new { userId = Model.UserId, count = 8 })
                    <!-- post navigation end-->
                </div>
                <!--single post end -->
                <div class="comments-form ts-grid-box" id="commentArea">

                    @await Component.InvokeAsync("Comment", new { articleId = Model.Id })
                    <!-- Comments-list ul end-->

                    <h3 class="comment-reply-title">Yorum Yap</h3>
                    <form role="form" class="ts-form" id="commentForm">
                        <div class="row">
                            <!-- Col end -->
                            <div class="col-md-12">
                                <div class="form-group">
                                    <textarea class="form-control msg-box" name="Description" id="message" placeholder="Yorumunuz..." rows="10" required=""></textarea>
                                </div>
                            </div>
                        </div>
                        <!-- Form row end -->
                        <div class="clearfix">
                            @if (Context.GetSessionData<SCA.Entity.DTO.UserSession>
                             ("userInfo")?.Id > 0)
                            {
                                <input class="hidden" type="hidden" name="ArticleId" value="@Model.Id" />
                                <button class="comments-btn btn btn-primary" type="submit">Yorum Yap</button>
                            }
                            else
                            {
                                <button class="comments-btn btn btn-primary openLoginMagnific" type="button">Yorum Yap</button>
                            }
                        </div>
                    </form>
                    <!-- Form end -->
                </div>
                <!-- comment form end-->
                @await Component.InvokeAsync("MostPopularItems", Model.MostPopularItems)
            </div>
            <!-- col end -->
            <div class="col-lg-3">
                <div class="right-sidebar">
                    @await Component.InvokeAsync("PopularContents", new { count = 5 })
                    @await Component.InvokeAsync("PopularCategories")
                </div>
            </div>
            <!-- right sidebar end-->
            <!-- col end-->
        </div>
        <!-- row end-->
    </div>
    <!-- container-->
</section>
<!-- single post end-->

@section Scripts{
    <script>
        const articleId = @Model.Id;
    </script>
    <script src="~/Scripts/PViews/Blog/index.js"></script>
}